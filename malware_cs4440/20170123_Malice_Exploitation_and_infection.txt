Malice, Exploitation and Infection 

A virus is called such because it acts like a biological virus in that it replicates and infects a new host

Elk Cloner Virus on Apple II, 1982
	Every 50th use of an infected floppy it would print out a message.
	didn't do much else, kinda just a "show off thing"
	one of the first instances of hiding the infection.


Virus: code that replicates itself
	possibly evolving functionality
	infect host or system area
	or modify / transform existing applications

Worm: viruses whose primary vector is network
	usually standalone

Logic Bomb: programmed malfunction in legit application
	eg self deleting applications
	eg Nokia "Mosquitos" game sent messages at premium rates when played


The challenge of virus detection:
	A virus is simply a program.
	a program is just a sequence of instructions on, say, a disk
	a disk is just a sequence of bytes
	at a high level it's just a matter of whether the sequence of bytes that make up the virus (p) is located on the disk (d)
	solved by basically just a string matching algorithm, but that is very inefficient due to size and obfuscation
	instead modern detection algorithms use heuristics, ie "viruses are often at the beginning of the file" or something

Heuristics for Virus detection:
	File size: has a know application changed size? (this would imply a virus has been added on to the file)
	Changes in behavior: because infections rewrite (parts of) a host application, it can cause changes in behavior. (ie crashes)
	Initial code (first thing that runs in an application) changed in application: that way you can guarantee the virus will execute
  ^ all of the above methods presuppose knowledge of "standard" applications 
	some viruses put code in the padding between memory block. this means the size of the file will not change.
		called a cavity virus.
		you check for this by creating your own "decoy" or "goat" cavity files and then check them for changes. 


Questions for the virus writer
	Where do I put the virus?
	Once I get it there, how to I get the virus to run?
	How do I hide what I've done?

	The basic answer to these questions is to infect a host program and then modify it's code in a way that anti-virus scanners won't detect
	But how do you pick a host?

Design trade offs:
	Finding a suitable host: if you're too picky then you spend a lot of CPU time and the user notices the slowdown
	Avoiding detection: if you try to avoid too well then you become more and more complex, thus making a suitable host harder to find
	infection strategy: if your code is too simple then you won't avoid detection, and if it's too complex then you again spend too much CPU time and are likely to be detected

	overwriting virus:
	if you replace a host completely then you will be discovered when the intended task doesn't run, but the size of the file will definitely change. if that filename is specifically targeted every time then scanners will quickly learn to check that file

	overwriting virus 2:
	infect the app with more code by simply overwriting only the number of bytes that the virus takes up. but once again this is easily discovered. 





